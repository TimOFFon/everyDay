//Преобразование типов (ПРИМИТИВНЫХ ЗНАЧЕНИЙ)

// Вопросы ===========================================
/*
1). К чему автоматический alert преобразует любое значение? (к строке || срока || string)
2). Какой метод преобразует любое значение к строке? (String(value))
3). Какой будет результат у выражения alert( "6" / "2" )? (3)
4). Какой метод явно преобразует из строкового контекста к числу, в виде аргумента используйте слово value? (Number(value))
5). Что удет результатом преобразования если  строка не может быть явно приведена к числу? (NaN)
6). Что будет по правилам численного преобразования, если мы попытаемся преобразовать undefined в число? (NaN)
7). Что будет по правилам численного преобразования, если мы попытаемся преобразовать null в число? (0)
8). Что будет по правилам численного преобразования, если мы попытаемся преобразовать true / false в число? (1 / 0)
9). Что будет по правилам численного преобразования, если мы попытаемся преобразовать string в число, если строка пустая? (0)
10). Что будет по правилам численного преобразования, если мы попытаемся преобразовать string в число, если строка НЕ пустая? (0)
11). Что будет по правилам численного преобразования, если мы попытаемся преобразовать строчное зачение в число? (Пробельные символы по краям обрезаются. Из строки «считывается» число. При ошибке результат NaN.)
12). Что будет по правилам численного преобразования, если мы попытаемся преобразовать Number("   123   ")?(123)
13). Что будет по правилам численного преобразования, если мы попытаемся преобразовать Number("123z")? NaN (ошибка чтения числа на месте символа "z")
14). Что будет по правилам численного преобразования, если мы попытаемся преобразовать Number(true)?  (1)
15). Что будет по правилам численного преобразования, если мы попытаемся преобразовать Number(false)? (0)
16). С помощью какой функции происходят логические преобразования, вместо аргумента используй value? (Boolean(value))
17). Перечисли значения которые по правилам логического преобразования вернут false? (0, "", null, undefined, NaN)
18). Что вернёт Boolean(1)? (true)
19). Что вернёт Boolean(0)? (false)
20). Что вернёт Boolean("Привет!")? (true)
21). Что вернёт Boolean("")?  (false)
22). Что вернёт Boolean("0")? (true)
23). Что вернёт Boolean(" ")? (true)
24). Что вернёт любая не пустая строка при логическом преобразовании? (true)
25). Что вернёт пробел в строке при логическом преобразовании? (true)
26). Перечисли наиболее часто используемые в JavaScript преобразования? (строковое, численное и логическое)
27). С помощью какого метода производится строковое преобразование, вместо аргумента используй value? (String(value))
28). С помощью какого метода производится численное преобразование, вместо аргумента используй value? (Number(value))
29). С помощью какого метода производится логическое преобразование, вместо аргумента используй value? (Boolean(value))
30). При этом преобразовании допускаются ошибки наиболее часто! Какое значение будет при численном преобразовании undefined? (NaN)
31). При этом преобразовании допускаются ошибки наиболее часто! Какое значение будет при численном преобразовании строки из одних пробелов типа " "? (true)
*/
// Вопросы ===========================================



// Базовые операторы, математика

// Вопросы ===========================================
/*
1). Как называется  то, к чему применяется оператор? (операнд)
2). Сколько здесь операндов 5 * 2? (2)
3). Как ещё иногда называют операнды? (аргументы)
4). Как называется оператор, который применяется к одному операнду? (унарный)
5). С помощью какого унарного оператора можно поменять знак числа на противоположный? (-)
6). Каков ожидается результат let x = 1; x = -x; alert(x)? (-1)
7). Как называется оператор, который применяется к двум операндам? (бинарный)
8). Напиши оператор возведения в степень? (**)
9). Что вернёт выражение с оператором "остаток от деления" в этом случае (5 % 2)? (1)
10). Что вернёт выражение с оператором "остаток от деления" в этом случае (8 % 3)? (2)
11). Какой  оператор  умножает a на само себя b раз? (**)
12). Что вернёт выражение с "оператором возведения в степень" в этом случае (2 ** 2)? (4)
13). Что вернёт выражение с "оператором возведения в степень" в этом случае (2 ** 3)? (8)
14). Что вернёт выражение с "оператором возведения в степень" в этом случае (2 ** 4)? (16)
15). Если оператор возведения в степень  умножает a на само себя b раз, то что здесь "а" ( 2 ** 3 )? (2)
16). Если оператор возведения в степень  умножает a на само себя b раз, то что здесь "b" ( 2 ** 4 )? (4)
17). С помощью какого выражения можно извлечь квадратный корень из 4? (4 ** (1/2))
18). С помощью какого выражения можно извлечь кубический корень из 8? (4 ** (1/3))
19). Eсли хотя бы один операнд является строкой, то во что преобразуется второй операнд? (строку)
20). Во что преобразуется ('1' + 2)? ("12")
21). Во что преобразуется (2 + '1')? ("21")
22). Во что преобразуется (2 + 2 + '1')? ("41")
23). Во что преобразуется (6 - '2')? (4)
24). Во что преобразуется ('6' / '2')? (3)
25). Во что преобразует оператор "унарный плюс" операнд не являющийся числом? (число)
26). Во что преобразуется let x = 1; alert( +x );? (1)
27). Во что преобразуется alert( +true );? (1)
28). Во что преобразуется alert( +"" );? (0)
29). Каким методом можно заменить оператор "унарный плюс"? (Number(...))
30). Во что преобразуется let apples = "2"; let oranges = "3"; ( apples + oranges )? ("23")
31). Во что преобразуется let apples = "2"; let oranges = "3"; ( +apples + +oranges )? (5)
32). Напишите то же самое выражение но использую специальный метод преобразования типов let apples = "2"; let oranges = "3"; ( +apples + +oranges )? ( Number(apples) + Number(oranges) )
33). Почему унарные плюсы выполняются до бинарного сложения, что здесь играет ключивую роль?  (приоритет)
34). Если в выражении есть несколько операторов чем определяется порядок их выполнения? (приоритетом)
35). Каков результат у этого выражения 1 + 2 * 2? (5)
36). Каков результат у этого выражения (1 + 2) * 2? (6)
37). В каком порядке выполнится выражение, если его операторы имеют равный приоритет? (слева направо)
38). У какого оператора приоритет выше у «унарный плюс» или у «сложения»? (унарный плюс)
39). Большинство операторов в JavaScript возвращают значение. Для некоторых это очевидно, например сложение + или умножение *. А оператор присваивания  является исключением? (нет)
40). Что делает вызов "оператора присваивания" в данном выражении x = value после записи "value" в "x"? (возвращает его)
41). В каком порядке происходит присваивание по цепочки let a, b, c; a = b = c = 2 + 2;? (справо налево)
42). Напиши "совмещённый оператор сложения"? (+=)
43). Напиши "совмещённый оператор умножения"? (+=)
44). Сократи эту запись с помощью "совмещённого оператора сложения" let n = 2; n = n + 5;? (n += 5)
45). Сократи эту запись с помощью "совмещённого оператора умножения" let n = 2; n = n * 2;? (n *= 2)
46). Каков результат у этого выражения, чему равен n let n = 2; n *= 3 + 5;? (16)
47). Каков приоритет больше, "вызов с присваиванием" или обычное "присваивание"? (одинаков)
48). Каков результат у данного выражения let counter = 2; counter++;? (3)
49). Каков результат у данного выражения let counter = 2; counter--;? (1)
50). К чему приведёт попытка использовать его на значении, типа 5++? (к ошибке)
51). Инкремент/декремент можно применить только к ...? (переменной)
52). Напиши "префиксную форму" инкремента на операнде counter? (++counter)
53). Напиши "постфиксную форму" инкремента на операнде counter? (counter++)
54). Напиши оператор декримента на переменной counter? (counter--)
55). Напиши оператор инкримента на переменной counter? (++counter)
56). Что вернёт выражение икремента с "префиксной формой" let counter = 1; let a = ++counter;? (2)
56). Что вернёт выражение икремента с "постфиксной формой" let counter = 1; let a = counter++;? (1)
57). Какой оператор увиличивает значение на 1, но возвращает старое значение.
58). Если результат операций с инкрементами/декрементами нужен не сразу, есть ли значение какую форму лучше использовать? (нет)
59). Если результат операций с инкрементами/декрементами нужен сразу, какую форму лучше использовать? (префиксную)
60). Если нужно увеличить и при этом получить значение переменной до увеличения, какую форму лучше использовать? (постфиксную)
61). Какое значение вернёт это выражение let counter = 0;
alert( counter++ );? (0)
62). У какого оператора приоритет выше, у умножения или декримента? (декримента)
63). Что вернёт данное выражение let counter = 1; alert( 2 * ++counter );?  (4)
64). Что вернёт данное выражение let counter = 1; alert( 2 * counter++ );?  (2)
65). Какой стиль написания кода лучше всего использовать в операциях с декрементами/инкрементами, для избегания меньшей читабельности и пропуска значений? («одна строка – одно действие»)
66). Перечисли побитовые операторы которые поддерживает JavaScript, латиницей в формате UPERCASE? (AND, OR, XOR, NOT, LEFT SHIFT, RIGHT SGIFT, ZERO-FILL RIGHT SHIFT)
67). Напиши побитовый оператор (и)  AND? (&) 
68). Напиши побитовый оператор (или)  OR? (|) 
69). Напиши побитовый оператор (побитовое исключающее или) XOR? (^) 
70). Напиши побитовый оператор (не) NOT? (~) 
71). Напиши побитовый оператор (левый сдвиг) LEFT SHIFT? (<<) 
72). Напиши побитовый оператор (правый сдвиг)  RIGHT SGIFT? (>>) 
73). Напиши побитовый оператор (правый сдвиг с заполнением нулями)  ZERO-FILL RIGHT SHIFT? (>>>) 
74). Что нам позволяет оператор "запятая"? (вычислять несколько выражений)
75). Какая особенность при возвращении значений после вычислений с применением оператора "запятая"? (возврощается только последнее значение)
78). Напиши результат данного вычисления let a = (1 + 2, 3 + 4); alert( a );? (7)
79). Какой приоритет у оператора "запятая"? (1 || самый низкий)
80). Напиши результат данного вычисления let a = 1 + 2, 3 + 4;  alert( a );? (3)
81). В каких ещё вычислениях удобно использовать оператор "запятая"? (в циклах)


*/
// Вопросы ===========================================