/** Поиск в массиве
 * Array.prototype.includes()
 * 
 * Метод includes() определяет, содержит ли 
 * массив определённый элемент, возвращая 
 * в зависимости от этого true или false.
 * 
 * Кроме того, очень незначительным 
 * отличием includes является то, что он 
 * правильно обрабатывает NaN в отличие от 
 * indexOf/lastIndexOf
 * 
 * Если мы хотим проверить наличие элемента, 
 * и нет необходимости знать его точный индекс, 
 * тогда предпочтительным является arr.includes.
 */

const arr = [1, 2, 3];
// console.log(arr.includes(2)); // true

const arr1 = ['cat', 'dog', 'bat'];
// console.log(arr1.includes('elephant')); // false

/** Синтаксис
 * 
 * arr.includes(searchElement[, fromIndex = 0])
 * 
 *  Параметры
 * 
 * **searchElement **
 * 
 * Искомый элемент.
 *  
 * **fromIndex** (Необязательный)
 * 
 * Позиция в массиве, с которой начинать поиск 
 * элемента  searchElement. 
 * При отрицательных значениях поиск производится 
 * начиная с индекса array.length + fromIndex 
 * по возрастанию. 
 * Значение по умолчанию равно 0.
 * Возвращаемое значение Boolean.
 */

// console.log([1, 2, 3].includes(2)); // true
// console.log([1, 2, 3].includes(4)); // false
// console.log([1, 2, 3].includes(3, 3)); // false
// console.log([1, 2, 3].includes(3, -1)); // true
// console.log([1, 2, NaN].includes(NaN)); // true

//================================================
//==== fromIndex больше или равен длине массива ==
//================================================

/**
 * Если fromIndex больше или равен длине массива, 
 * то возвращается false. 
 * При этом поиск не производится.
 */

const arr2 = ['a', 'b', 'c'];
// console.log(arr2.includes('c', 3)); // false
// console.log(arr2.includes('c', 100)); // false

//================================================
//==== Вычисленный индекс меньше нуля 0 ==========
//================================================
/**
 * Если fromIndex отрицательный, 
 * то вычисляется индекс, 
 * начиная с которого будет производиться 
 * поиск элемента searchElement. 
 * Если вычисленный индекс меньше нуля, 
 * то поиск будет производиться во всём массиве.
 */

// длина массива равна 3
// fromIndex равен -100
// вычисленный индекс равен 3 + (-100) = -97

const arr3 = ['a', 'b', 'c'];

// console.log(arr3.includes('a', -100)); // true
// console.log(arr3.includes('b', -100)); // true
// console.log(arr3.includes('c', -100)); // true

//================================================
//Использование includes() в качестве общего метода 
//================================================
/**
 * includes() специально сделан общим. 
 * Он не требует, чтобы this являлся массивом, 
 * так что он может быть применён к другим типам 
 * объектов (например, к массивоподобным объектам). 
 * Пример ниже показывает использование 
 * метода includes() на объекте arguments.
 */

// (function() {
//     console.log([].includes.call(arguments, 'a')); // true
//     console.log([].includes.call(arguments, 'd')); // false
// })('a','b','c');